<?xml version="1.0"?>
<!--

     Copyright 2005-2017 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<!--
    Definitions based on sun_checks.xml from com.puppycrawl.tools:checkstyle:8.2
    With additional checks from Apache Camel
-->
<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <property name="fileExtensions" value="java, properties, xml" />

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--<module name="JavadocPackage" />-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile" />

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation" />

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="3600" />
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="fileExtensions" value="java" />
    </module>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <!-- Checks for Headers                                -->
    <!-- Just use `mvn -Plicense process-sources`          -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--<module name="JavadocMethod" />-->
        <!--<module name="JavadocType" />-->
        <!--<module name="JavadocVariable" />-->
        <!--<module name="JavadocStyle" />-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport">
            <property name="excludes" value="java.io,java.util,java.net,java.nio,java.nio.channels,java.lang.reflect,org.w3c.dom,org.xml.sax,java.awt,javax.swing,junit.framework,org.junit" />
            <property name="allowStaticMemberImports" value="true" />
        </module>
        <module name="IllegalImport" /> <!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="false" />
        </module>
        <module name="ImportOrder">
            <property name="groups" value="java,javax" />
            <property name="ordered" value="true" />
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="ExecutableStatementCount">
            <property name="max" value="100" />
        </module>
        <module name="LineLength">
            <property name="max" value="200" />
            <property name="ignorePattern" value="notes\s=" />
        </module>
        <module name="MethodLength">
            <property name="max" value="200" />
            <property name="countEmpty" value="false" />
        </module>
        <module name="ParameterNumber">
            <property name="max" value="7" />
        </module>
        <module name="AnonInnerLength">
            <property name="max" value="200" />
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad" />
        <module name="EmptyForInitializerPad" />
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
        </module>
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI" />
        </module>
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN,TYPE_EXTENSION_AND" />
        </module>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier">
            <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CLASS_DEF, ENUM_DEF, RESOURCE" />
        </module>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <!--<module name="AvoidNestedBlocks" />-->
        <!--<module name="EmptyBlock" />-->
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />

        <module name="NestedIfDepth">
            <property name="max" value="8" />
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="8" />
        </module>
        <module name="IllegalThrows">
            <property name="illegalClassNames" value="java.lang.Error,java.lang.RuntimeException" />
        </module>

        <module name="PackageDeclaration" />
        <module name="DeclarationOrder" />
        <module name="ParameterAssignment" />
        <module name="ExplicitInitialization" />
        <module name="DefaultComesLast" />
        <module name="FallThrough" />
        <module name="MultipleVariableDeclarations" />
        <module name="UnnecessaryParentheses" />

        <module name="SuperClone" />
        <module name="SuperFinalize" />

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--<module name="AvoidInlineConditionals" />-->
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <!--<module name="HiddenField" />-->
        <module name="IllegalInstantiation" />
        <!--<module name="InnerAssignment" />-->
        <!--<module name="MagicNumber" />-->
        <module name="MissingSwitchDefault" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--<module name="DesignForExtension" />-->
        <module name="FinalClass" />
        <module name="HideUtilityClassConstructor" />
        <module name="InterfaceIsType" />
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true" />
            <property name="packageAllowed" value="true" />
            <property name="ignoreAnnotationCanonicalNames" value="org.junit.Rule, org.junit.ClassRule, com.google.common.annotations.VisibleForTesting, org.assertj.core.util.VisibleForTesting" />
        </module>

        <module name="MutableException">
            <property name="format" value="^.*Exception$" />
        </module>
        <module name="ThrowsCount">
            <property name="max" value="5" />
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <!--<module name="FinalParameters" />-->
        <module name="TodoComment" />
        <module name="UpperEll" />

        <!--Assert statement may have side effects:-->
        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_ASSERT" />
            <property name="limitedTokens" value="ASSIGN,DEC,INC,POST_DEC,POST_INC,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,BSR_ASSIGN,SR_ASSIGN,SL_ASSIGN,BAND_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN" />
            <property name="maximumNumber" value="0" />
        </module>

        <module name="SuppressionCommentFilter" />

    </module>

</module>
